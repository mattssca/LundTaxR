% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_glm.R
\name{get_glm}
\alias{get_glm}
\title{Get General Linear Model Scores.}
\usage{
get_glm(
  these_predictions = NULL,
  these_samples_metadata = NULL,
  subtype_class = "5_class",
  scale = NULL,
  bin_scores = TRUE,
  n_bins = 10,
  this_subtype = NULL,
  categorical_factor = NULL,
  predictor_columns = NULL,
  exclude_columns = NULL,
  row_to_col = FALSE,
  sample_id_col = NULL
)
}
\arguments{
\item{these_predictions}{Required parameter. A data frame with predictions scores from
\code{classify_samples}.}

\item{these_samples_metadata}{Required, a data frame with metadata associated with the prediction
calls, Note, the function will subset the return to samples are included in this object.}

\item{subtype_class}{Can be one of the following; 5_class or 7_class. Default is 5_class.}

\item{scale}{Optional parameter. A numeric value to scale the numeric scores. If provided, all
numeric scores will be multiplied by this value.}

\item{bin_scores}{Boolean parameter. Set to TRUE to bin the numeric scores into discrete bins.
Default is TRUE}

\item{n_bins}{Optional parameter. The number of bins to use when binning numeric scores. Default
is 10.}

\item{this_subtype}{Optional parameter. Allows the user to subset the return to a specific
subtype within the selected class. If not specified, the function will return a data frame with
subtype information for all the subtypes within the specified class.}

\item{categorical_factor}{Required parameter. Specify the two level categorical variable you want
to test for.}

\item{predictor_columns}{Optional, should be a vector with column names, either from the provided
metadata or signature score object, to be tested for. If not provided, the function will subset
data to the signature scores returned with \code{classify_samples}.}

\item{exclude_columns}{Optional argument, specify columns you wish to exclude from the standard
predictor columns. Note, this parameter is only validated if predictor_columns is NULL (default).}

\item{row_to_col}{Boolean parameter. Set to TRUE to transform row names of the metadata to a new
column called sample_id. Default is FALSE.}

\item{sample_id_col}{Parameter dictating the column name with sample IDs, the function expects
this column to be sample_id but the user can override this if they know the name for this column.}
}
\value{
A data frame with statistical scores for the selected samples/subtypes.
}
\description{
Run a Mann-Whitney and general linear regression on a set of
prediction scores.
}
\details{
This function takes a data frame with prediction data \code{these_predictions} and executes
statistical tests to find significant prediction scores based on a categorical variable (i.e
response,tumour grade, etc.) from a provided metadata table. Currently, the function expects the
incoming data to be the score output from \code{\link[=classify_samples]{classify_samples()}}, together with metadata
information of interest (e.g two level categorical) and subtype classification information. The
user have the option to point the function to the categorical variable with \code{categorical_factor}.
The return can be further subset by subtype by using the \code{this_subtype} variable, should be one
of the valid subtypes within the specified class.
}
\examples{
#run classifier
sjodahl_classes = classify_samples(this_data = sjodahl_2017, 
                                   log_transform = FALSE, 
                                   adjust = TRUE, 
                                   impute = TRUE, 
                                   include_data = TRUE, 
                                   verbose = FALSE)
                                   
#run general linear models
sjodahl_glm_uro = get_glm(these_predictions = sjodahl_classes,
                          these_samples_metadata = sjodahl_2017_meta,
                          subtype_class = "5_class",
                          this_subtype = "Uro",
                          categorical_factor = "adj_chemo")

sjodahl_glm_all = get_glm(these_predictions = sjodahl_classes,
                          these_samples_metadata = sjodahl_2017_meta,
                          subtype_class = "5_class",
                          this_subtype = NULL,
                          bin_scores = FALSE,
                          categorical_factor = "adj_chemo")

#view data
head(sjodahl_glm_uro)

}
